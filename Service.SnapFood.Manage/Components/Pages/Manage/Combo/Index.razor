@page "/Quan-Ly/Combo"
@using Microsoft.FluentUI.AspNetCore.Components
@using Microsoft.FluentUI.AspNetCore.Components.Icons
@using Service.SnapFood.Manage.Dto.Combo;
@using Service.SnapFood.Share.Model.SQL
@namespace Service.SnapFood.Manage.Components.Pages.Manage.Combo


<FluentStack Orientation="Orientation.Vertical" VerticalGap="12">
    <h2>Danh sách Combo</h2>

    <FluentStack Orientation="Orientation.Horizontal" Style="display:flex; justify-content:space-between">
        <FluentStack Orientation="Orientation.Horizontal" HorizontalGap="10">
            <FluentButton Appearance="Appearance.Accent" IconStart="@(new Icons.Regular.Size20.AddCircle())" OnClick="OpenModalAdd">Thêm mới</FluentButton>

        </FluentStack>
        <FluentSearch Placeholder="Nhập vào từ khóa" />
    </FluentStack>
    <FluentGridItem Style="width:100%;">
        <FluentDataGrid @ref="ComboGrid"
                        TGridItem="ComboDto"
                        ItemsProvider="@LoadCombo"
                        Pagination="@pagination"
                        ResizableColumns="false"
                        MultiLine="true"
                        GridTemplateColumns="0.5fr 1.5fr 1.0fr 1.5fr 1.0fr 1.0fr 1.0fr 1.0fr 1.0fr  "
                        RowSize="DataGridRowSize.Large"
                        ShowHover="true">



            <TemplateColumn Title="#" Style="display:flex;align-items: center;">
                <span style="cursor: pointer;">
                    @context.Index
                </span>
            </TemplateColumn>
            <TemplateColumn Title="Tên" Style="display: flex;align-items: center;">
                <span style="cursor: pointer; color: dodgerblue;" @onclick="() => OpenDetailsModal(context.Id)">
                    @context.ComboName
                </span>
            </TemplateColumn>
            <TemplateColumn Title="Hình ảnh" Style="display: flex; align-items: center;">
                <img src="@context.ImageUrl" alt="Ảnh sản phẩm" style="max-height: 40px; max-width: 60px; object-fit: contain;" />
            </TemplateColumn>
            <TemplateColumn Title="Sản phẩm">
                <div style="max-height: 80px; overflow-y: auto; display: flex; flex-direction: column; gap: 4px;">
                    @foreach (var item in context.ComboItems)
                    {
                        <div style="cursor: pointer;">
                            @if (item.ModerationStatus == ModerationStatus.Approved)
                            {
                                @item.ProductName
                            }
                            else
                            {
                                <span style="color: gray; text-decoration: line-through;">@item.ProductName</span>
                            }
                        </div>
                    }
                </div>
            </TemplateColumn>


            <TemplateColumn Title="Phân loại" Style="display: flex;align-items: center;">
                <span style="cursor: pointer; ">
                    @if (context.CategoryModerationStatus == ModerationStatus.Approved)
                    {
                        @context.CategoryName
                    }
                    else
                    {
                        <span style="color: gray; text-decoration: line-through;">@context.CategoryName</span>
                    }
                </span>
            </TemplateColumn>
            <TemplateColumn Title="Giá bán" Style="display: flex;align-items: center;">
                <span style="cursor: pointer; ">
                    @context.BasePrice.ToString("N0") đ
                </span>
            </TemplateColumn>
            <TemplateColumn Title="Đã bán" Style="display: flex;align-items: center;">
                <span style="cursor: pointer; ">
                    @context.Quantity
                </span>
            </TemplateColumn>

            <TemplateColumn Title="Trạng thái" Style="display: flex; align-items: center;">
                <FluentBadge Appearance="@(context.ModerationStatus != 0 ? Appearance.Neutral : Appearance.Accent)">
                    @(context.ModerationStatus != 0 ? "Chưa phê duyệt" : "Đã duyệt")
                </FluentBadge>
            </TemplateColumn>
            <TemplateColumn Title="Thao tác" Style="display: flex; align-items: center; justify-content:space-between;min-width:155px">
                <FluentStack Orientation="Orientation.Horizontal" HorizontalGap="5">
                    @if (context.ModerationStatus != 0)
                    {
                        <FluentButton Title="Sửa" Appearance="Appearance.Outline" OnClick="@(() => OpenModalUpdate(context.Id))">
                            <FluentIcon Value="@(new Icons.Regular.Size16.Edit())" />
                        </FluentButton>
                    }

                    @if (context.ModerationStatus == 0)
                    {
                        <FluentButton Title="Hủy duyệt" Appearance="Appearance.Outline" OnClick="@(() => RejectAsync(context.Id))">
                            <FluentIcon Value="@(new Icons.Regular.Size16.Dismiss())" />
                        </FluentButton>
                    }
                    else
                    {
                        <FluentButton Title="Duyệt" Appearance="Appearance.Outline" OnClick="@(() => ApproveAsync(context.Id))">
                            <FluentIcon Value="@(new Icons.Regular.Size16.Checkmark())" />
                        </FluentButton>
                    }
                    @if (context.ModerationStatus != 0)
                    {
                        <FluentButton Title="Xóa" Appearance="Appearance.Outline" OnClick="@(() => DeleteAsync(context.Id))">
                            <FluentIcon Value="@(new Icons.Regular.Size16.Delete())" />
                        </FluentButton>


                    }
                </FluentStack>
            </TemplateColumn>
        </FluentDataGrid>

        <Paginator PaginationState="@pagination" SelectedPageSizeChanged="RefresData" />
    </FluentGridItem>

</FluentStack>
