@using Microsoft.FluentUI.AspNetCore.Components
@using Microsoft.FluentUI.AspNetCore.Components.Icons
@using Service.SnapFood.Manage.Dto
@using Service.SnapFood.Manage.Dto.Combo
@using Service.SnapFood.Share.Interface.Extentions
@using Service.SnapFood.Share.Model.SQL
@using Service.SnapFood.Share.Model.ServiceCustomHttpClient

@inherits ComponentBase
@implements IDialogContentComponent<EditOrUpdateParameters>

@if (ComboDto != null)
{
    <FluentDialogHeader ShowDismiss="true">
        <FluentStack VerticalAlignment="VerticalAlignment.Center">
            <FluentIcon Value="@(new Icons.Regular.Size24.Info())" />
            <FluentLabel Typo="Typography.PaneHeader">
                @Dialog.Instance.Parameters.Title
            </FluentLabel>
        </FluentStack>
    </FluentDialogHeader>

    <FluentDialogBody>
        <FluentGrid Spacing="2" AdaptiveRendering="true" Justify="JustifyContent.FlexStart" Style="padding: 4px;">
            <FluentGridItem md="12">
                <div class="row-info">
                    <label>Tên combo:</label>
                    <div>@ComboDto.ComboName</div>
                </div>
            </FluentGridItem>

            <FluentGridItem md="12">
                <div class="row-info">
                    <label>Hình ảnh:</label>
                    <div><img src="@ComboDto.ImageUrl" alt="Ảnh" style="max-height: 80px; max-width: 100px; object-fit: contain;" /></div>
                </div>
            </FluentGridItem>

            <FluentGridItem md="12">
                <div class="row-info">
                    <label>Sản phẩm:</label>
                    <div>
                        @foreach (var item in @ComboDto.ComboItems)
                        {
                            <div style="cursor: pointer;">@item.ProductName</div>
                        }
                    </div>
                </div>
            </FluentGridItem>
            <FluentGridItem md="12">
                <div class="row-info">
                    <label>Ghi chú:</label>
                    @if (!string.IsNullOrEmpty(ComboDto.Description))
                    {
                        <div>
                            @ComboDto.Description
                        </div>
                    }
                    else
                    {
                        <div>
                            Trống
                        </div>
                    }

                </div>
            </FluentGridItem>

            <FluentGridItem md="12">
                <div class="row-info">
                    <label>Phân loại:</label>
                    <div>@ComboDto.CategoryName</div>
                </div>
            </FluentGridItem>

            <FluentGridItem md="12">
                <div class="row-info">
                    <label>Giá bán:</label>
                    <div>@ComboDto.BasePrice.ToString("N0") đ</div>
                </div>
            </FluentGridItem>

            <FluentGridItem md="12">
                <div class="row-info">
                    <label>Đã bán:</label>
                    <div>@ComboDto.Quantity</div>
                </div>
            </FluentGridItem>

            @if (ComboDto.CreatedByName != "Hệ thống")
            {
                <FluentGridItem md="12">
                    <div class="row-info">
                        <label>Người tạo:</label>
                        <div>@ComboDto.CreatedByName</div>
                    </div>
                </FluentGridItem>
                <FluentGridItem md="12">
                    <div class="row-info">
                        <label>Ngày tạo:</label>
                        <div>@ComboDto.Created</div>
                    </div>
                </FluentGridItem>
            }
            else
            {
                <FluentGridItem md="12">
                    <div class="row-info">
                        <label>Người tạo:</label>
                        <div>@ComboDto.CreatedByName</div>
                    </div>
                </FluentGridItem>
            }

            @if (ComboDto.LastModifiedByName != "Hệ thống")
            {
                <FluentGridItem md="12">
                    <div class="row-info">
                        <label>Người sửa gần nhất:</label>
                        <div>@ComboDto.LastModifiedByName</div>
                    </div>
                </FluentGridItem>
                <FluentGridItem md="12">
                    <div class="row-info">
                        <label>Ngày sửa gần nhất:</label>
                        <div>@ComboDto.LastModified</div>
                    </div>
                </FluentGridItem>
            }

            <FluentGridItem md="12">
                <div class="row-info">
                    <label>Trạng thái:</label>
                    <div>
                        <FluentBadge Appearance="@(ComboDto.ModerationStatus != 0 ? Appearance.Neutral : Appearance.Accent)">
                            @(ComboDto.ModerationStatus != 0 ? "Chưa phê duyệt" : "Đã duyệt")
                        </FluentBadge>
                    </div>
                </div>
            </FluentGridItem>
        </FluentGrid>
    </FluentDialogBody>

    <FluentDialogFooter>
        <FluentButton Appearance="Appearance.Neutral" OnClick="CancelAsync" Loading="@IsCancelling" Disabled="@IsCancelling">Đóng</FluentButton>
    </FluentDialogFooter>
}
else if (!string.IsNullOrEmpty(ErrorMessage))
{
    <FluentDialogBody>
        <FluentGridItem md="12">@ErrorMessage</FluentGridItem>
    </FluentDialogBody>
    <FluentDialogFooter>
        <FluentButton Appearance="Appearance.Neutral" OnClick="CancelAsync" Loading="@IsCancelling" Disabled="@IsCancelling">Đóng</FluentButton>
    </FluentDialogFooter>
}
else
{
    <FluentDialogBody Style="display:flex;justify-content:center;align-items:center;">
        <FluentProgressRing />
    </FluentDialogBody>
}

<style>
    .row-info {
        display: grid;
        grid-template-columns: 50% 50%;
        align-items: center;
        gap: 8px;
        padding: 6px 0;
    }

        .row-info label {
            font-weight: 500;
        }
</style>

@code {
    [CascadingParameter]
    public FluentDialog Dialog { get; set; } = default!;

    [Parameter]
    public EditOrUpdateParameters Content { get; set; } = new();

    [Inject] private ICallServiceRegistry CallApi { get; set; } = default!;
    [Inject] private IDialogService DialogService { get; set; } = default!;

    private bool IsCancelling { get; set; }
    private ComboDto ComboDto { get; set; } = new ComboDto();
    private string? ErrorMessage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (Content.Id != Guid.Empty)
            {
                ComboDto = await GetComboById(Content.Id);
            }
            else
            {
                ErrorMessage = "Không có ID combo để lấy thông tin.";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"Lỗi khi tải dữ liệu: {ex.Message}";
            Console.WriteLine(ex.Message);
        }
    }

    private async Task<ComboDto> GetComboById(Guid id)
    {
        try
        {
            Content.RequestApi.Endpoint = $"api/Combo/{id}";
            ResultAPI result = await CallApi.Get<ComboDto>(Content.RequestApi);
            if (result.Status == StatusCode.OK)
            {
                return result.Data as ComboDto ?? throw new Exception("Dữ liệu trả về không đúng định dạng ComboDto.");
            }
            else
            {
                throw new Exception(result.Message ?? "Lỗi khi lấy thông tin.");
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"Lỗi khi lấy thông tin: {ex.Message}";
            return new ComboDto();
        }
    }

    private async Task CancelAsync()
    {
        await Dialog.CancelAsync();
    }
}
