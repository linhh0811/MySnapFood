@page "/Quan-Ly/Nguoi-Dung"
@namespace Service.SnapFood.Manage.Components.Pages.Manage.User
@using Microsoft.FluentUI.AspNetCore.Components
@using Microsoft.FluentUI.AspNetCore.Components.Icons
@using Service.SnapFood.Manage.Dto.User
@using Service.SnapFood.Share.Model.Enum
@using Service.SnapFood.Share.Model.SQL
@inject NavigationManager Navigation
@if (CurrentUser.UserId == Guid.Empty)
{
    <p>Bạn chưa đăng nhập!</p>
}
else if (CurrentUser.Roles.Contains(EnumRole.Admin) || CurrentUser.Roles.Contains(EnumRole.Manager))
{
    <FluentStack Orientation="Orientation.Vertical" VerticalGap="12">
        <h2>Danh sách người dùng</h2>

        <FluentStack Orientation="Orientation.Horizontal" Style="display:flex; justify-content:space-between">
            <FluentStack Orientation="Orientation.Horizontal" HorizontalGap="10">
            </FluentStack>
            <FluentSearch @bind-Value="SearchKeyword" @bind-Value:after=RefreshDataAsync Placeholder="Nhập vào từ khóa" />
        </FluentStack>
        <FluentGridItem Style="width:100%;">
            <FluentDataGrid @ref="UserGrid"
            TGridItem="UserDto"
            ItemsProvider="@LoadUsers"
            Pagination="@pagination"
            ResizableColumns="false"
            GridTemplateColumns="0.5fr 2fr 2fr 1fr 1fr 1.25fr 1fr"
            RowSize="DataGridRowSize.Large"
            ShowHover="true"
            GenerateHeader="GenerateHeaderOption.Sticky">
                <TemplateColumn Title="#" Style="display:flex;align-items: center;">
                    <span style="cursor: pointer;">
                        @context.Index
                    </span>
                </TemplateColumn>
                <TemplateColumn  Title="Họ tên" Style="display: flex;align-items: center;">
                    <span style="cursor: pointer; color: dodgerblue;" @onclick="() => OpenDetailsModal(context.Id)">
                        @context.FullName
                    </span>
                </TemplateColumn>
                <TemplateColumn Title="Email" Style="display: flex;align-items: center;">
                    <span style="cursor: pointer;">
                        @context.Email
                    </span>
                </TemplateColumn>
                <TemplateColumn Align="Align.Center" Title="Tổng đơn" >
                    <div style="display: flex; justify-content: center; align-items: center; height: 100%;">
                        <span style="cursor: pointer;">@context.TongDonHang</span>
                    </div>
                </TemplateColumn>
                <TemplateColumn Align="Align.Center" Title="Đơn bị hủy" >
                    <div style="display: flex; justify-content: center; align-items: center; height: 100%;">
                        <span style="cursor: pointer;">@context.DonHangBiHuy</span>
                    </div>
                </TemplateColumn>
                <TemplateColumn Title="Trạng thái" Style="display: flex; align-items: center;">
                    @if (context.ModerationStatus == ModerationStatus.Approved)
                    {
                        <FluentBadge Appearance="Appearance.Accent">
                            <span>Đang hoạt động</span>
                        </FluentBadge>
                    }
                    else
                    {
                        <FluentBadge Appearance="Appearance.Neutral" Color="white" BackgroundColor="red">
                            <span>Tạm ngừng hoạt động</span>
                        </FluentBadge>
                    }
                </TemplateColumn>
                <TemplateColumn Title="Thao tác" Style="display: flex; align-items: center; justify-content:space-between;min-width:100px">
                    <FluentStack Orientation="Orientation.Horizontal" HorizontalGap="5">
                        <FluentButton Title="Xem chi tiết" Appearance="Appearance.Outline" OnClick="()=>XemDonHang(context.Id)">
                            <FluentIcon Value="@(new Icons.Regular.Size16.Eye())" />
                        </FluentButton>
                        @if (context.ModerationStatus == 0)
                        {
                            <FluentButton Title="Hủy duyệt" Appearance="Appearance.Outline" OnClick="@(() => RejectAsync(context.Id))">
                                <FluentIcon Value="@(new Icons.Regular.Size16.Dismiss())" />
                            </FluentButton>
                        }
                        else
                        {
                            <FluentButton Title="Duyệt" Appearance="Appearance.Outline" OnClick="@(() => ApproveAsync(context.Id))">
                                <FluentIcon Value="@(new Icons.Regular.Size16.Checkmark())" />
                            </FluentButton>
                        }
                    </FluentStack>
                </TemplateColumn>
            </FluentDataGrid>
            <Paginator PaginationState="@pagination" SelectedPageSizeChanged="RefresData" />
        </FluentGridItem>
    </FluentStack>
}
else
{
    <p>Bạn không có quyền sử dụng chức năng.</p>
}