@page "/Quan-Ly/San-Pham"
@using Microsoft.FluentUI.AspNetCore.Components
@using Microsoft.FluentUI.AspNetCore.Components.Icons
@using Service.SnapFood.Manage.Dto.ProductDto;
@using Service.SnapFood.Share.Model.Enum
@using Service.SnapFood.Share.Model.SQL
@namespace Service.SnapFood.Manage.Components.Pages.Manage.Product

@if (CurrentUser.UserId == Guid.Empty)
{
    <p>Bạn chưa đăng nhập!</p>
}
else if (CurrentUser.Roles.Contains(EnumRole.Admin) || CurrentUser.Roles.Contains(EnumRole.Manager))
{
    <FluentStack Orientation="Orientation.Vertical" VerticalGap="12">
        <h2>Danh sách sản phẩm</h2>

        <FluentStack Orientation="Orientation.Horizontal" Style="display:flex; justify-content:space-between">
            <FluentStack Orientation="Orientation.Horizontal" HorizontalGap="10">

                <FluentButton Appearance="Appearance.Accent" IconStart="@(new Icons.Regular.Size20.AddCircle())" OnClick="OpenModalAdd">Thêm mới</FluentButton>

            </FluentStack>
            <div style="display: flex; align-items: center; gap: 10px;">
                <FluentSelect @bind-Value="CategoryId"
                              @bind-Value:after="RefreshDataAsync"
                              Items="CategoryList"
                              OptionText="@(x => x.CategoryName)"
                              OptionValue="@(x => x.Id)"
                              Nullable="true"
                              Style="width:100%;"
                              Height="220px"
                              Position="SelectPosition.Below"
                              Width="150px;">
                </FluentSelect>
                <FluentSelect Items="_SelectTrangThai"
                              @bind-Value="SelectedTrangThai"
                              @bind-Value:after="RefreshDataAsync"
                              OptionText="@(x => x.Value)"
                              OptionValue="@(x => x.Key)"
                              Style="width:100%"
                              Position="SelectPosition.Below"
                              Width="150px;">
                </FluentSelect>
                <FluentSearch Style="min-width:200px;" @bind-Value="SearchKeyword" @bind-Value:after=RefreshDataAsync Placeholder="Nhập vào từ khóa" />
            </div>

        </FluentStack>
        <FluentGridItem Style="width:100%;">
            <FluentDataGrid @ref="ProductGrid"
                            TGridItem="ProductDto"
                            ItemsProvider="@LoadProduct"
                            Pagination="@pagination"
                            ResizableColumns="false"
                            GridTemplateColumns="0.5fr 1.5fr 1.0fr 2.0fr 1.5fr 1.5fr 1.0fr  1.0fr 1.0fr"
                            RowSize="DataGridRowSize.Large"
                            ShowHover="true"
                            GenerateHeader="GenerateHeaderOption.Sticky">



                <TemplateColumn Title="#" Style="display:flex;align-items: center;">
                    <span style="cursor: pointer;">
                        @context.Index
                    </span>
                </TemplateColumn>
                <TemplateColumn Title="Tên" Style="display: flex;align-items: center;">
                    <span style="cursor: pointer; color: dodgerblue;" @onclick="() => OpenDetailsModal(context.Id)">
                        @context.ProductName
                    </span>
                </TemplateColumn>
                <TemplateColumn Title="Hình ảnh" Style="display: flex; align-items: center;">
                    <img src="@context.ImageUrl" alt="Ảnh sản phẩm" style="max-height: 40px; max-width: 60px; object-fit: contain;" />
                </TemplateColumn>
                <TemplateColumn Title="Size" Style="display: flex;align-items: center;">
                    <span style="cursor: pointer; ">
                        @if (@context.SizeName is null)
                        {
                            <span>Trống</span>
                        }
                        else
                        {
                            if (context.SizeModerationStatus == ModerationStatus.Approved)
                            {
                                @context.SizeName
                            }
                            else
                            {
                                <span style="color: gray; text-decoration: line-through;">@context.SizeName</span>


                            }

                        }
                    </span>

                </TemplateColumn>
                <TemplateColumn Title="Phân loại" Style="display: flex;align-items: center;">
                    <span style="cursor: pointer; ">
                        @if (context.CategoryModerationStatus == ModerationStatus.Approved)
                        {
                            @context.CategoryName
                        }
                        else
                        {
                            <span style="color: gray; text-decoration: line-through;">@context.CategoryName</span>
                        }
                    </span>
                </TemplateColumn>
                <TemplateColumn Title="Giá bán" Style="display: flex;align-items: center;">
                    <span style="cursor: pointer; ">
                        @context.BasePrice.ToString("N0") đ
                    </span>
                </TemplateColumn>
                <TemplateColumn Title="Đã bán" Sortable="true" SortBy="@_roleNameSort" Style="display: flex;align-items: center;">
                    <span style="cursor: pointer; ">
                        @context.Quantity
                    </span>
                </TemplateColumn>

                <TemplateColumn Title="Trạng thái" Style="display: flex; align-items: center;">
                    <FluentBadge Appearance="@(context.ModerationStatus != 0 ? Appearance.Neutral : Appearance.Accent)">
                        @(context.ModerationStatus != 0 ? "Chưa phê duyệt" : "Đã duyệt")
                    </FluentBadge>
                </TemplateColumn>
                <TemplateColumn Title="Thao tác" Style="display: flex; align-items: center; justify-content:space-between;min-width:155px">
                    <FluentStack Orientation="Orientation.Horizontal" HorizontalGap="5">
                        @if (context.ModerationStatus != 0)
                        {
                            <FluentButton Title="Sửa" Appearance="Appearance.Outline" OnClick="@(() => OpenModalUpdate(context.Id))">
                                <FluentIcon Value="@(new Icons.Regular.Size16.Edit())" />
                            </FluentButton>
                        }

                        @if (context.ModerationStatus == 0)
                        {
                            <FluentButton Title="Hủy duyệt" Appearance="Appearance.Outline" OnClick="@(() => RejectAsync(context.Id))">
                                <FluentIcon Value="@(new Icons.Regular.Size16.Dismiss())" />
                            </FluentButton>
                        }
                        else
                        {
                            <FluentButton Title="Duyệt" Appearance="Appearance.Outline" OnClick="@(() => ApproveAsync(context.Id))">
                                <FluentIcon Value="@(new Icons.Regular.Size16.Checkmark())" />
                            </FluentButton>
                        }
                        @if (context.ModerationStatus != 0)
                        {
                            <FluentButton Title="Xóa" Appearance="Appearance.Outline" OnClick="@(() => DeleteAsync(context.Id))">
                                <FluentIcon Value="@(new Icons.Regular.Size16.Delete())" />
                            </FluentButton>


                        }
                    </FluentStack>
                </TemplateColumn>
            </FluentDataGrid>

            <Paginator PaginationState="@pagination" SelectedPageSizeChanged="RefresData" />
        </FluentGridItem>

    </FluentStack>
}
else
{
    <p>Bạn không có quyền sử dụng chức năng.</p>
}