@page "/Ban-Hang/Ban-Tai-Quay"
@using Service.SnapFood.Manage.Dto.Cart
@using Service.SnapFood.Manage.Enums
@using Service.SnapFood.Share.Interface.Extentions
@using Service.SnapFood.Share.Model.Commons
@using Service.SnapFood.Share.Model.Enum
@using Service.SnapFood.Share.Model.ServiceCustomHttpClient
@if(CurrentUser.UserId == Guid.Empty)
{
    <p>Bạn chưa đăng nhập!</p>
}else if (CurrentUser.Roles.Contains(EnumRole.Staff) || CurrentUser.Roles.Contains(EnumRole.Admin) || CurrentUser.Roles.Contains(EnumRole.Manager))
{
    <div class="header">
        <div class="row mb-2 pt-2">
            <div class="col-lg-3">
                <input type="text" placeholder="Thêm sản phẩm vào đơn (F3)">
            </div>
            <div class="col-lg-8" style="gap:10px;">
                @{
                    int i = 1;
                    foreach (var cart in Carts)
                    {
                        <button style="margin-right:10px;">Hóa đơn @i</button>
          
                        i++;
                    }
                }
                
                <button  @onclick="ThemMoiDonHang">+</button>
            </div>
            <div class="col-lg-1">
                <button style="background: #4CAF50; color: white;">Khách hàng</button>
            </div>
        </div>
        
        
       
    </div>

    <div class="row mb-2 pt-2">
        <div class="col-lg-9">
            <div class="card shadow">
                <div class="card-body">


                    <FluentDataGrid Items="@CartModel.CartItems.AsQueryable()"
                                    TGridItem="CartItemDto"
                                    GridTemplateColumns="0.45fr 0.75fr 1.45fr 0.75fr 0.9fr 0.75fr 0.4fr"
                                    ResizableColumns="false"
                                    MultiLine="true"
                                    ShowHover="true">
                        <ChildContent>
                            <TemplateColumn Title="#" Style="display:flex;align-items:center;">
                                <span class="product-code">@(CartModel.CartItems.IndexOf(context) + 1)</span>
                            </TemplateColumn>
                            <TemplateColumn Title="Hình ảnh" Style="display:flex;align-items:center;">
                                <img src="@context.ImageUrl" style="max-height:60px;max-width:70px;object-fit:contain;" alt="@context.ItemName" />
                            </TemplateColumn>
                            <TemplateColumn Title="Tên" Style="display: flex; flex-direction: column; justify-content: center;">
                                <span style="font-size:16px;">
                                    @context.ItemName
                                </span>
                                @if (context.ItemType == ItemType.Product)
                                {
                                    <div style="max-height: 80px; overflow-y: auto; display: flex; flex-direction: column; gap: 4px; color: gray;padding-left:20px;">
                                        <div style="cursor: pointer;font-size:12px;">
                                            Kích thước:  @context.SizeName
                                        </div>
                                    </div>
                                }
                                @if (context.ItemType == ItemType.Combo)
                                {
                                    <div style="max-height: 80px; overflow-y: auto; display: flex; flex-direction: column; gap: 4px; color: gray;padding-left:20px;">
                                        @foreach (var item in context.ComboItems)
                                        {
                                            <div style="cursor: pointer;font-size:12px;">
                                                @item.ProductName (@item.SizeName)
                                            </div>
                                        }
                                    </div>
                                }
                            </TemplateColumn>
                            <TemplateColumn Title="Giá" Style="display: flex; flex-direction: column; justify-content: center;">
                                @if (context.PriceEndown > 0)
                                {
                                    <div style="display: flex; align-items: center; gap: 10px;">
                                        <FluentLabel Style="text-decoration: line-through;font-size:12px;">
                                            @context.BasePrice.ToString("N0") đ
                                        </FluentLabel>

                                        @if (context.BasePrice > context.PriceEndown)
                                        {
                                            var discountPercent = Math.Round(((context.BasePrice - context.PriceEndown) / context.BasePrice) * 100);
                                            <FluentLabel Style="color: green;font-size:12px;">
                                                -@discountPercent %
                                            </FluentLabel>
                                        }
                                    </div>
                                    <FluentLabel>@context.PriceEndown.ToString("N0") đ</FluentLabel>
                                }
                                else
                                {
                                    <FluentLabel>@context.BasePrice.ToString("N0") đ</FluentLabel>
                                }
                            </TemplateColumn>
                            <TemplateColumn Title="Số lượng" Style="display:flex;align-items:center;gap:5px;">
                                <FluentButton Appearance="Appearance.Outline" Style="width: 30px; height: 30px; background-color: #FF969A; color: white;" Onclick="()=>DecreaseQuantity(context.Id,context.ItemType,context.Quantity)" Disabled="IsUpdateQuantity" Title="Giảm số lượng">
                                    <FluentIcon Value="@(new Icons.Regular.Size16.Subtract())"
                                                Color="@Color.Neutral" />
                                </FluentButton>
                                <FluentLabel Style="width: 30px; height: 30px; display: flex; align-items: center; justify-content: center; border: 1px solid #ccc; border-radius: 4px;">@context.Quantity</FluentLabel>
                                <FluentButton Appearance="Appearance.Outline" Style="width: 30px; height: 30px; background-color: #FF969A; color: white;" Onclick="()=>IncreaseQuantity(context.Id,context.ItemType)" Disabled="IsUpdateQuantity" Title="Thêm số lượng">
                                    <FluentIcon Value="@(new Icons.Regular.Size16.Add())" Color="@Color.Neutral" />
                                </FluentButton>
                            </TemplateColumn>
                            <TemplateColumn Title="Tổng" Style="display: flex; flex-direction: column; justify-content: center;">
                                @if (context.PriceEndown > 0)
                                {
                                    <div style="display: flex; align-items: center; gap: 10px;">
                                        <FluentLabel Style="text-decoration: line-through;font-size:12px;">
                                            @((context.BasePrice * context.Quantity).ToString("N0")) đ
                                        </FluentLabel>

                                        @if (context.BasePrice > context.PriceEndown)
                                        {
                                            var discountPercent = Math.Round(((context.BasePrice - context.PriceEndown) / context.BasePrice) * 100);
                                            <FluentLabel Style="color: green;font-size:12px;">
                                                -@discountPercent %
                                            </FluentLabel>
                                        }
                                    </div>
                                    <FluentLabel>@((context.PriceEndown * context.Quantity).ToString("N0")) đ</FluentLabel>
                                }
                                else
                                {
                                    <FluentLabel>@((context.BasePrice * context.Quantity).ToString("N0")) đ</FluentLabel>
                                }

                            </TemplateColumn>
                            <TemplateColumn Style="display:flex;align-items:center;">
                                <FluentButton OnClick="()=>RemoveItem(context.Id,context.ItemType)" Title="Gỡ khỏi giỏ hàng">
                                    <FluentIcon Value="@(new Icons.Regular.Size20.Delete())" Color="@Color.Neutral" />
                                </FluentButton>
                            </TemplateColumn>
                        </ChildContent>
                    </FluentDataGrid>
                </div>
            </div>

        </div>
        <div class="col-lg-3">
            <div class="card shadow">
                <div class="card-body">
                    <h3>Thông tin thanh toán</h3>
                    <div class="cart-summary">
                        <div><span>Số lượng sản phẩm:</span> <span>3</span></div>
                        <div><span>Tổng tiền:</span> <span>130,000</span></div>
                        <div><span>VAT:</span> <span>0</span></div>
                        <div><span>Chiết khấu:</span> <span>0</span></div>
                        <div class="total"><span>Khách phải trả:</span> <span>130,000</span></div>
                    </div>
                    <button class="pay-btn">Thanh toán</button>
                </div>

            </div>

            
        </div>
    </div>
    
}
else
{
    <p>Bạn không có quyền sử dụng chức năng.</p>
}
 <style>
        .header {
            background: linear-gradient(90deg, #4a58d2, #5e72eb);
            color: white;
            padding: 10px;
            align-items: center;
            gap: 10px;
        }
        .header input {
            width:100%;
            padding: 8px;
            border-radius: 4px;
            border: none;
        }
        .header button {
            padding: 8px 12px;
            background: white;
            color: #333;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .product-code {
            background: #eee;
            border-radius: 50%;
            width: 24px;
            height: 24px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 12px;
        }
        .cart {
            flex: 1;
            background: white;
            border-radius: 6px;
            padding: 10px;
        }
        .cart h3 {
            margin-top: 0;
        }
        .cart-summary {
            margin-top: 10px;
            border-top: 1px solid #ddd;
            padding-top: 10px;
        }
        .cart-summary div {
            display: flex;
            justify-content: space-between;
            margin: 4px 0;
        }
        .total {
            font-weight: bold;
            color: #4a58d2;
            font-size: 18px;
        }
        .pay-btn {
            background: #4a58d2;
            color: white;
            width: 100%;
            padding: 10px;
            border: none;
            border-radius: 4px;
            font-size: 16px;
            margin-top: 10px;
        }

    .content{
        padding-top:0;
    }
    </style>
