@inherits LayoutComponentBase
@using Microsoft.FluentUI.AspNetCore.Components
@using Service.SnapFood.Manage.Infrastructure.Services
@using Service.SnapFood.Share.Model.Commons
@using Microsoft.AspNetCore.Components.Authorization;

@inject IUserService UserService
<style>
    body {
        margin: 0;
        color: #6a6f8c;
        font-weight: 600;
        font-size: 16px;
        line-height: 18px;
        font-family: "Times New Roman", serif !important;
    }


    .loading-center {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 24px;
        font-weight: bold;
        background-color: rgba(255, 255, 255, 0.7);
        z-index: 1;
    }

    *, *::before, *::after {
        font-family: inherit !important;
    }

    input, textarea, button, select {
        font-family: inherit !important;
    }
</style>

@if (isLoading)
{
    <div class="loading-center">
        Đang tải...
    </div>
}
else
{
    @if (CurrentUser is not null && !string.IsNullOrEmpty(CurrentUser.UserName))
    {
        <CascadingValue Value="CurrentUser">
            <FluentLayout>

                <FluentStack Class="body-stack" Orientation="Orientation.Horizontal" Width="100%" HorizontalGap="0">

                    <NavMenu />
                    <FluentBodyContent id="body-content" Style="height: calc(100dvh - 90px);">
                        <Header />
                        <div class="content">
                            <article id="article">

                                @Body

                            </article>
                            <FluentToastProvider MaxToastCount="10" Position="ToastPosition.BottomRight" />
                            <FluentDialogProvider />
                            <FluentTooltipProvider />
                            <FluentKeyCodeProvider />
                            <FluentMenuProvider />

                        </div>
                    </FluentBodyContent>
                </FluentStack>
            </FluentLayout>
        </CascadingValue>

    }
    else
    {
        <Login></Login>
    }
}
<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>
@code {
    private CurrentUser CurrentUser = new();
    public bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        CurrentUser = await UserService.GetCurrentUserAsync();
        isLoading = false;
        StateHasChanged();
    }
}