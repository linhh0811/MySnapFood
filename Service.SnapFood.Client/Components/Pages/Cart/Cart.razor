@page "/Gio-Hang"
@inherits CartBase
@using Service.SnapFood.Client.Dto.Cart
@using Microsoft.FluentUI.AspNetCore.Components
@using Microsoft.FluentUI.AspNetCore.Components.Icons
@using Service.SnapFood.Client.Enums
@using Service.SnapFood.Client.Infrastructure.Service
@using Service.SnapFood.Share.Model.SQL

<h2 class="mb-3 fw-bold text-center text-uppercase" style="margin-top:30px;margin-bottom:30px;z-index:2">🛒 GIỎ HÀNG CỦA BẠN</h2>

@if (isLoading)
{
    <div class="loading-center">
        Đang tải...
    </div>
}
else
{
    @if (CartModel == null || !CartModel.CartItems.Any())
    {
        <div class="empty-cart">
            <div class="empty-icon">🛒</div>
            <h2 class="empty-title">Giỏ hàng trống</h2>
            <p class="empty-description">
                Bạn chưa có món nào trong giỏ hàng.<br>
                Hãy khám phá các món ngon và thêm vào giỏ nhé!
            </p>
            <a href="#" class="cta-button pulse" @onclick="NavigateToOrderHome">
                🍕 Khám phá món ngon
            </a>
        </div>
    }
    else
    {
        <div class="row mb-2">
            <div class="col-lg-9">
                <div class="card shadow">
                    <div class="card-body">

                        <FluentDataGrid Items="@CartModel.CartItems.AsQueryable()"
                                        TGridItem="CartItemDto"
                                        GridTemplateColumns="0.45fr 0.75fr 1.45fr 0.75fr 0.9fr 0.75fr 0.4fr"
                                        ResizableColumns="false"
                                        MultiLine="true"
                                        ShowHover="true">
                            <ChildContent>
                                <TemplateColumn Title="#" Style="display:flex;align-items:center;">
                                    <span>@(CartModel.CartItems.IndexOf(context) + 1)</span>
                                </TemplateColumn>
                                <TemplateColumn Title="Hình ảnh" Style="display:flex;align-items:center;">
                                    <div style="position: relative;">
                                        <img src="@context.ImageUrl"
                                             style="max-height:60px;max-width:70px;object-fit:contain;@(context.ModerationStatus == ModerationStatus.Rejected ? "filter: grayscale(100%) opacity(0.5);" : "")"
                                             alt="@context.ItemName" />
                                        @if (context.ModerationStatus == ModerationStatus.Rejected)
                                        {
                                            <div style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background: rgba(255, 0, 0, 0.8); color: white; padding: 2px 6px; border-radius: 4px; font-size: 10px; font-weight: bold;width:70px;">
                                                HẾT HÀNG
                                            </div>
                                        }
                                    </div>
                                </TemplateColumn>
                                <TemplateColumn Title="Tên" Style="display: flex; flex-direction: column; justify-content: center;">
                                    <span style="font-size:16px;">
                                        <span style="@(context.ModerationStatus == ModerationStatus.Rejected ? "color: #999; text-decoration: line-through;" : "")">@context.ItemName</span>
                                        
                                        @if (context.ModerationStatus == ModerationStatus.Rejected)
                                        {
                                            <span style="color: red; font-weight: bold; margin-left: 8px;">(HẾT HÀNG)</span>
                                        }
                                    </span>
                                    @if (context.ItemType == ItemType.Product)
                                    {
                                        <div style="max-height: 80px; overflow-y: auto; display: flex; flex-direction: column; gap: 4px; color: @(context.ModerationStatus == ModerationStatus.Rejected ? "#ccc" : "gray");padding-left:20px;">
                                            <div style="cursor: pointer;font-size:12px;">
                                                Kích thước:  @context.SizeName
                                            </div>
                                        </div>
                                    }
                                    @if (context.ItemType == ItemType.Combo)
                                    {
                                        <div style="max-height: 80px; overflow-y: auto; display: flex; flex-direction: column; gap: 4px; color: @(context.ModerationStatus == ModerationStatus.Rejected ? "#ccc" : "gray");padding-left:20px;">
                                            @foreach (var item in context.ComboItems)
                                            {
                                                <div style="cursor: pointer;font-size:12px;">
                                                    @item.ProductName (@item.SizeName)
                                                </div>
                                            }
                                        </div>
                                    }
                                </TemplateColumn>
                                <TemplateColumn Title="Giá" Style="display: flex; flex-direction: column; justify-content: center;">
                                    @if (context.ModerationStatus == ModerationStatus.Rejected)
                                    {
                                        <FluentLabel Style="color: #999;">Không khả dụng</FluentLabel>
                                    }
                                    else
                                    {
                                        @if (context.PriceEndown > 0)
                                        {
                                            <div style="display: flex; align-items: center; gap: 10px;">
                                                <FluentLabel Style="text-decoration: line-through;font-size:12px;">
                                                    @context.BasePrice.ToString("N0") đ
                                                </FluentLabel>

                                                @if (context.BasePrice > context.PriceEndown)
                                                {
                                                    var discountPercent = Math.Round(((context.BasePrice - context.PriceEndown) / context.BasePrice) * 100);
                                                    <FluentLabel Style="color: green;font-size:12px;">
                                                        -@discountPercent %
                                                    </FluentLabel>
                                                }
                                            </div>
                                            <FluentLabel>@context.PriceEndown.ToString("N0") đ</FluentLabel>
                                        }
                                        else
                                        {
                                            <FluentLabel>@context.BasePrice.ToString("N0") đ</FluentLabel>
                                        }
                                    }
                                </TemplateColumn>
                                <TemplateColumn Title="Số lượng" Style="display:flex;align-items:center;gap:5px;">
                                    @if (context.ModerationStatus == ModerationStatus.Rejected)
                                    {
                                        <div style="display: flex; align-items: center; gap: 5px; opacity: 0.5;">
                                            <FluentButton Appearance="Appearance.Outline" Style="width: 30px; height: 30px; background-color: #ccc; color: white;" Disabled="true" Title="Sản phẩm hết hàng">
                                                <FluentIcon Value="@(new Icons.Regular.Size16.Subtract())" Color="@Color.Neutral" />
                                            </FluentButton>
                                            <FluentLabel Style="width: 30px; height: 30px; display: flex; align-items: center; justify-content: center; border: 1px solid #ccc; border-radius: 4px; background-color: #f5f5f5;">@context.Quantity</FluentLabel>
                                            <FluentButton Appearance="Appearance.Outline" Style="width: 30px; height: 30px; background-color: #ccc; color: white;" Disabled="true" Title="Sản phẩm hết hàng">
                                                <FluentIcon Value="@(new Icons.Regular.Size16.Add())" Color="@Color.Neutral" />
                                            </FluentButton>
                                        </div>
                                    }
                                    else
                                    {
                                        <FluentButton Appearance="Appearance.Outline" Style="width: 30px; height: 30px; background-color: #FF969A; color: white;" Onclick="()=>DecreaseQuantity(context.Id,context.ItemType,context.Quantity)" Disabled="IsUpdateQuantity" Title="Giảm số lượng">
                                            <FluentIcon Value="@(new Icons.Regular.Size16.Subtract())" Color="@Color.Neutral" />
                                        </FluentButton>
                                        <FluentLabel Style="width: 30px; height: 30px; display: flex; align-items: center; justify-content: center; border: 1px solid #ccc; border-radius: 4px;">@context.Quantity</FluentLabel>
                                        <FluentButton Appearance="Appearance.Outline" Style="width: 30px; height: 30px; background-color: #FF969A; color: white;" Onclick="()=>IncreaseQuantity(context.Id,context.ItemType)" Disabled="IsUpdateQuantity" Title="Thêm số lượng">
                                            <FluentIcon Value="@(new Icons.Regular.Size16.Add())" Color="@Color.Neutral" />
                                        </FluentButton>
                                    }
                                </TemplateColumn>
                                <TemplateColumn Title="Tổng" Style="display: flex; flex-direction: column; justify-content: center;">
                                    @if (context.ModerationStatus == ModerationStatus.Rejected)
                                    {
                                        <FluentLabel Style="color: #999;">Không khả dụng</FluentLabel>
                                    }
                                    else
                                    {
                                        @if (context.PriceEndown > 0)
                                        {
                                            <div style="display: flex; align-items: center; gap: 10px;">
                                                <FluentLabel Style="text-decoration: line-through;font-size:12px;">
                                                    @((context.BasePrice * context.Quantity).ToString("N0")) đ
                                                </FluentLabel>

                                                @if (context.BasePrice > context.PriceEndown)
                                                {
                                                    var discountPercent = Math.Round(((context.BasePrice - context.PriceEndown) / context.BasePrice) * 100);
                                                    <FluentLabel Style="color: green;font-size:12px;">
                                                        -@discountPercent %
                                                    </FluentLabel>
                                                }
                                            </div>
                                            <FluentLabel>@((context.PriceEndown * context.Quantity).ToString("N0")) đ</FluentLabel>
                                        }
                                        else
                                        {
                                            <FluentLabel>@((context.BasePrice * context.Quantity).ToString("N0")) đ</FluentLabel>
                                        }
                                    }
                                </TemplateColumn>
                                <TemplateColumn Style="display:flex;align-items:center;">
                                    <FluentButton OnClick="()=>RemoveItem(context.Id,context.ItemType)" Title="Gỡ khỏi giỏ hàng">
                                        <FluentIcon Value="@(new Icons.Regular.Size20.Delete())" Color="@Color.Neutral" />
                                    </FluentButton>
                                </TemplateColumn>
                            </ChildContent>
                        </FluentDataGrid>
                    </div>
                </div>

            </div>
            <div class="col-lg-3">
                <div style="display: flex; flex-direction: column; gap: 12px; width: 100%;">

                    <div style="font-weight: bold; font-size: 16px;">Phương thức nhận hàng</div>

                    <label style="border: @(GetBorderStyle("Nhan-Tai-Quay")); border-radius: 8px; padding: 12px; cursor: pointer; display: flex; align-items: center; gap: 10px;" @onclick="@(()=>PhuongThucNhanHangClick("Nhan-Tai-Quay"))">
                        <input type="radio" name="deliveryMethod" value="Nhan-Tai-Quay" checked style="accent-color: #FF969A;" />
                        🏪 Nhận tại quầy
                    </label>

                    <label style="border: @(GetBorderStyle("Giao-Tan-Noi")); border-radius: 8px; padding: 12px; cursor: pointer; display: flex; align-items: center; gap: 10px;" @onclick="@(()=>PhuongThucNhanHangClick("Giao-Tan-Noi"))">
                        <input type="radio" name="deliveryMethod" value="Giao-Tan-Noi" style="accent-color: #FF969A;" />
                        🚚 Giao tận nơi
                    </label>

                </div>

                <div style="width: 100%; border-radius: 12px; box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1); overflow: hidden; background-color: white;margin-top: 20px;">
                    <div style="padding: 16px; font-size: 16px;">
                        <div style="display: flex; justify-content: space-between; margin-bottom: 12px; color: #1d293f;">
                            <span>Tổng</span>
                            <span>@totalPrice.ToString("N0") đ</span>
                        </div>
                        @if (totalPriceEndown > 0)
                        {
                            <div style="display: flex; justify-content: space-between; margin-bottom: 12px; color: #1d293f;">
                                <span>Khuyến mãi</span>
                                <span>-@totalPriceEndown.ToString("N0") đ</span>
                            </div>
                        }

                        @* Kiểm tra và hiển thị thông báo nếu có sản phẩm hết hàng *@
                        @if (CartModel.CartItems.Any(x => x.ModerationStatus == ModerationStatus.Rejected))
                        {
                            <div style="background-color: #fff3cd; border: 1px solid #ffeaa7; border-radius: 6px; padding: 8px; margin-bottom: 12px;">
                                <div style="color: #856404; font-size: 12px; display: flex; align-items: center; gap: 4px;">
                                    <FluentIcon Value="@(new Icons.Regular.Size16.Warning())" Color="@Color.Warning" />
                                    Một số sản phẩm đã hết hàng và sẽ không được tính vào tổng tiền
                                </div>
                            </div>
                        }

                        <hr style="border: none; border-top: 1px dashed #ff969a; margin-bottom: 12px;" />
                        <div style="display: flex; justify-content: space-between; font-weight: bold; font-size: 18px; color: #1d293f;">
                            <span>Tạm tính</span>
                            <span>@((totalPrice - totalPriceEndown).ToString("N0")) đ</span>
                        </div>
                    </div>
                    <button style="background-color: #ff5961; color: white; width: 100%; padding: 14px 0; font-size: 16px; font-weight: bold; border: none; cursor: pointer;" @onclick="CheckOut">
                        Tiếp tục
                    </button>
                </div>
            </div>
        </div>
    }
}

<style>
    /* Style chính cho container giỏ hàng trống */
    .empty-cart {
        text-align: center;
        padding: 60px 20px;
        border-radius: 20px;
        margin: 40px 0;
        position: relative;
        overflow: hidden;
    }

        /* Hiệu ứng shimmer (ánh sáng lướt qua) */
        .empty-cart::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);
            transform: rotate(45deg);
            animation: shimmer 3s infinite;
        }

    /* Style cho icon giỏ hàng */
    .empty-icon {
        width: 120px;
        height: 120px;
        margin: 0 auto 30px;
        background: linear-gradient(135deg, #ff9ff3, #feca57);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 60px;
        color: white;
        box-shadow: 0 10px 30px rgba(255, 159, 243, 0.3);
        animation: float 3s ease-in-out infinite;
    }

    /* Style cho tiêu đề */
    .empty-title {
        font-size: 24px;
        font-weight: 600;
        color: #333;
        margin-bottom: 15px;
    }

    /* Style cho mô tả */
    .empty-description {
        color: #666;
        font-size: 16px;
        margin-bottom: 30px;
        line-height: 1.6;
    }

    /* Style cho button call-to-action */
    .cta-button {
        background: linear-gradient(135deg, #ff6b6b, #ee5a24);
        color: white;
        padding: 15px 40px;
        border: none;
        border-radius: 50px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-block;
        box-shadow: 0 8px 25px rgba(255, 107, 107, 0.3);
        position: relative;
        overflow: hidden;
    }

        /* Hover effect cho button */
        .cta-button:hover {
            transform: translateY(-3px);
            box-shadow: 0 12px 35px rgba(255, 107, 107, 0.4);
        }

        /* Hiệu ứng ánh sáng lướt qua button */
        .cta-button::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s;
        }

        .cta-button:hover::before {
            left: 100%;
        }

    /* Animation pulse cho button */
    .pulse {
        animation: pulse 2s infinite;
    }
</style>