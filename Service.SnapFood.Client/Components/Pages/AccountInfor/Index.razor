@page "/thong-tin-tai-khoan"
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IToastService ToastService
@inject ICallServiceRegistry CallApi

@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using Service.SnapFood.Client.Dto.User
@using Service.SnapFood.Share.Interface.Extentions
@using Service.SnapFood.Share.Model.ServiceCustomHttpClient

<h2 class="text-center mt-4 mb-4 fw-bold text-uppercase" style="color: #2c3e50;">Thông tin tài khoản</h2>

@if (IsLoading)
{
    <p class="text-center">Đang tải thông tin...</p>
}
else if (!string.IsNullOrWhiteSpace(ErrorMessage))
{
    <p class="text-danger text-center">@ErrorMessage</p>
}
else if (UserInfo != null)
{
    <div class="container d-flex justify-content-center">
        <div class="card shadow p-4" style="width: 100%; max-width: 500px;">
            <h5 class="mb-4 fw-semibold" style="color: #34495e;">Thông tin cá nhân</h5>

            <div class="mb-3">
                <label class="form-label">Họ tên</label>
                <input class="form-control" @bind="UserInfo.FullName" placeholder="Nhập họ tên" />
            </div>

            <div class="mb-3">
                <label class="form-label">Số điện thoại</label>
                <input class="form-control" @bind="UserInfo.Numberphone" placeholder="Số điện thoại" />
            </div>

            <div class="mb-3">
                <label class="form-label">Email</label>
                <input class="form-control" @bind="UserInfo.Email" placeholder="Email" />
            </div>

            <div class="text-center">
                <button class="btn btn-primary px-4" @onclick="SaveChanges">Lưu thông tin</button>
            </div>
        </div>
    </div>
}

@code {
    private UserDto? UserInfo;
    private bool IsLoading = true;
    private string ErrorMessage = string.Empty;
    private readonly ApiRequestModel requestRestAPI = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;

            if (user.Identity?.IsAuthenticated == true)
            {
                var userIdClaim = user.FindFirst("user_id");
                if (userIdClaim != null && Guid.TryParse(userIdClaim.Value, out var userId))
                {
                    requestRestAPI.Endpoint = $"api/User/{userId}";
                    var result = await CallApi.Get<UserDto>(requestRestAPI);

                    if (result.Status == StatusCode.OK && result.Data is UserDto dto)
                    {
                        UserInfo = dto;
                    }
                    else
                    {
                        ErrorMessage = "Không thể tải thông tin người dùng.";
                    }
                }
                else
                {
                    ErrorMessage = "Không tìm thấy UserId.";
                }
            }
            else
            {
                ErrorMessage = "Người dùng chưa đăng nhập.";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = "Lỗi khi tải thông tin: " + ex.Message;
        }
        finally
        {
            IsLoading = false;
        }
    }

    private async Task SaveChanges()
    {
        if (UserInfo == null)
            return;

        try
        {
            requestRestAPI.Endpoint = $"api/User/{UserInfo.Id}";
            var result = await CallApi.Put(requestRestAPI, UserInfo);

            if (result.Status == StatusCode.OK)
            {
                ToastService.ShowSuccess("Cập nhật thông tin thành công!");
            }
            else
            {
                ToastService.ShowError("Cập nhật thất bại rồi cưng: " + result.Message);
            }
        }
        catch (Exception ex)
        {
            ToastService.ShowError($"Lỗi khi cập nhật: {ex.Message}");
        }
    }
}
