@using Microsoft.FluentUI.AspNetCore.Components
@using Service.SnapFood.Client.Dto
@implements IDialogContentComponent

<FluentDialogHeader ShowDismiss="true" Style="padding-bottom:10px">
    <h3>@Content.Title</h3>
</FluentDialogHeader>
<FluentDialogBody style="margin: 0; padding: 16px;">
    <FluentStack Orientation="Orientation.Horizontal" style="align-items: center; gap: 12px;">
        <svg class="icon" style="width: 24px; height: 24px; fill: var(--warning); flex-shrink: 0;" focusable="false" viewBox="0 0 24 24" aria-hidden="true">
            <path d="M12 2a10 10 0 1 1 0 20 10 10 0 0 1 0-20Zm0 1.67a8.34 8.34 0 0 0 0 16.66 8.34 8.34 0 0 0 0-16.66Zm0 11.83a1 1 0 1 1 0 2 1 1 0 0 1 0-2Zm0-8.75a2.75 2.75 0 0 1 2.75 2.75c0 1.01-.3 1.57-1.05 2.36l-.17.17c-.62.62-.78.89-.78 1.47a.75.75 0 0 1-1.5 0c0-1.01.3-1.57 1.05-2.36l.17-.17c.62-.62.78-.89.78-1.47a1.25 1.25 0 0 0-2.5-.13v.13a.75.75 0 0 1-1.5 0A2.75 2.75 0 0 1 12 6.75Z"></path>
        </svg>
        <FluentStack Orientation="Orientation.Vertical" style="gap: 4px;">
            <p style="margin: 0; line-height: 1.5;">@Content.Content</p>
            <p style="margin: 0; line-height: 1.5;">@Content.Message</p>
        </FluentStack>
    </FluentStack>
</FluentDialogBody>
<FluentDialogFooter Style="padding-top:15px">
    <FluentStack Orientation="Orientation.Vertical">
        <FluentStack Orientation="Orientation.Horizontal" HorizontalAlignment="HorizontalAlignment.Right" Style="gap: 10px;">
            <FluentButton Appearance="Appearance.Neutral"
                          @onclick="CancelDelete"
                          Disabled="isDeleted">
                Hủy
            </FluentButton>
            <FluentButton BackgroundColor="red" Color="White"
                          @onclick="ConfirmDelete"
                          Disabled="isDeleted">
                @if (isDeleted)
                {
                    <span style="margin-left: 8px; ">Đang Xoá ....</span>
                }
                else
                {
                    <span>Xoá</span>
                }
            </FluentButton>
        </FluentStack>
    </FluentStack>
</FluentDialogFooter>

@code {
    [CascadingParameter]
    public FluentDialog Dialog { get; set; } = default!;
    public RequestModalConfirm Content { get; set; } = new();
    private bool isDeleted = false;
    private async Task ConfirmDelete()
    {
        isDeleted = true;
        await Dialog.CloseAsync(true);
    }
    private async Task CancelDelete()
    {
        await Dialog.CloseAsync(false);
    }
}
